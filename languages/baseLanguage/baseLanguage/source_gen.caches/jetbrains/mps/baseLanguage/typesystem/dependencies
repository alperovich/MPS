<?xml version="1.0" encoding="UTF-8"?>
<dependenciesRoot>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.AddCast_QuickFix" file="AddCast_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.actions.PrecedenceUtil" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ExpressionStatement__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.AddExceptionToMethodSignature_QuickFix" file="AddExceptionToMethodSignature_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.AddImplicitConstructorToAnonymousClass_QuickFix" file="AddImplicitConstructorToAnonymousClass_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.AddMissingParensToNotExpression_QuickFix" file="AddMissingParensToNotExpression_QuickFix.java">
    <classNode dependClassName="jetbrains.mps.smodel.action.SNodeFactoryOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.Add_NotNullAnnotation_QuickFix" file="Add_NotNullAnnotation_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.Add_NullableAnnotationToParameter_QuickFix" file="Add_NullableAnnotationToParameter_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.Arrays_InequationReplacementRule" file="Arrays_InequationReplacementRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.util.MatchingUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInequationReplacementRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.BinaryExpressionPriority_QuickFix" file="BinaryExpressionPriority_QuickFix.java">
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ParenthesisUtil" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.Boolean_extends_boolean_2_SubtypingRule" file="Boolean_extends_boolean_2_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.runtime.PatternUtil" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.GeneratedMatchingPattern" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.Boolean_extends_primitive_SubtypingRule" file="Boolean_extends_primitive_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.ChangeExpectedType_QuickFix" file="ChangeExpectedType_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.ChangeMethodReturnType_QuickFix" file="ChangeMethodReturnType_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.CheckBinaryOperationPriority_NonTypesystemRule" file="CheckBinaryOperationPriority_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ParenthesisUtil" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.CheckExcessTypeCasts_NonTypesystemRule" file="CheckExcessTypeCasts_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.CheckExtendedClassIsImported_NonTypesystemRule" file="CheckExtendedClassIsImported_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SModule" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.scopes.RepositoryStateCacheUtils" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="java.util.Collection" />
    <classNode dependClassName="jetbrains.mps.project.dependency.GlobalModuleDependenciesManager" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.CheckForReexportExtendedClassifier_NonTypesystemRule" file="CheckForReexportExtendedClassifier_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.project.AbstractModule" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SModule" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="java.util.Collection" />
    <classNode dependClassName="jetbrains.mps.project.dependency.GlobalModuleDependenciesManager" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.CheckVariableDoubling_NonTypesystemRule" file="CheckVariableDoubling_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.PropertyMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.util.Collections" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.scope.Scope" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.CheckingUtil" file="CheckingUtil.java">
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.UnsupportedOperationException" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.apache.log4j.Level" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="java.lang.Character" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SModel" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IOperation__BehaviorDescriptor" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="org.apache.log4j.LogManager" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Expression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.lang.IllegalStateException" />
    <classNode dependClassName="java.lang.Short" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SModule" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="java.lang.Byte" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="org.apache.log4j.Logger" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.ChooseAppropriateMethodDeclaration_QuickFix" file="ChooseAppropriateMethodDeclaration_QuickFix.java">
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.scopes.Members" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ResolveUtil" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.Class_Void_weak_supertypeof_void_SubtypingRule" file="Class_Void_weak_supertypeof_void_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.ClassifierType_NOT_subtypeOf_ClassifierType_InequationReplacementRule" file="ClassifierType_NOT_subtypeOf_ClassifierType_InequationReplacementRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInequationReplacementRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.ClassifierType_comparableTo_raw_ClassifierType_ComparisonRule" file="ClassifierType_comparableTo_raw_ClassifierType_ComparisonRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ComparisonRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.ConvertFieldToLocalVariable_QuickFix" file="ConvertFieldToLocalVariable_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.ConvertString_QuickFix" file="ConvertString_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.DataFlowUtil" file="DataFlowUtil.java">
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ILocalReference__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.DataflowBuilderException" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IVariableAssignment__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.DataFlow" />
    <classNode dependClassName="org.jetbrains.annotations.NotNull" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ILocalDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.Program" />
    <classNode dependClassName="jetbrains.mps.generator.TransientModelsModule" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="java.lang.RuntimeException" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.dependencies.CheckingMethod" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.EnumsAreEnum_SubtypingRule" file="EnumsAreEnum_SubtypingRule.java">
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.ExpressionPresentationUtil" file="ExpressionPresentationUtil.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Expression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ILeftCombinator" />
    <classNode dependClassName="jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="org.jetbrains.annotations.Nullable" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.FixArrayClassExpressionNotOnArrayType_QuickFix" file="FixArrayClassExpressionNotOnArrayType_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.FixInstanceOfExpressionPrecedences_QuickFix" file="FixInstanceOfExpressionPrecedences_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.FixParametersInAnonymousClass_QuickFix" file="FixParametersInAnonymousClass_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.FixPrimitiveClassExpressionNotOnPrimitiveType_QuickFix" file="FixPrimitiveClassExpressionNotOnPrimitiveType_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.Interface_is_comparable_to_ClassifierType_ComparisonRule" file="Interface_is_comparable_to_ClassifierType_ComparisonRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ComparisonRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.LowerBoundType_subtypeOf_bound_InequationReplacementRule" file="LowerBoundType_subtypeOf_bound_InequationReplacementRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.util.MatchingUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.runtime.PatternUtil" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SContainmentLink" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.GeneratedMatchingPattern" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="jetbrains.mps.util.IterableUtil" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInequationReplacementRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.MakeClassAbstract_QuickFix" file="MakeClassAbstract_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.MakeInnerClassStatic_QuickFix" file="MakeInnerClassStatic_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.MakeInterfaceMethodAbstract_QuickFix" file="MakeInterfaceMethodAbstract_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.MakeStaticCall_QuickFix" file="MakeStaticCall_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ResolveUnknownUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.MakeStaticFieldNotStatic_QuickFix" file="MakeStaticFieldNotStatic_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.MakeStaticInitializerNotStatic_QuickFix" file="MakeStaticInitializerNotStatic_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.MakeStaticMethodNotStatic_QuickFix" file="MakeStaticMethodNotStatic_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.MakeVariableFinal_QuickFix" file="MakeVariableFinal_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.MatchVisibility_QuickFix" file="MatchVisibility_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.NonFinalParametersInAnonymousClass_NonTypesystemRule" file="NonFinalParametersInAnonymousClass_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.VariableReference__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.NonFinalVariablesInAnonymousClass_NonTypesystemRule" file="NonFinalVariablesInAnonymousClass_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.VariableReference__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.ObjectArraySupertypes_SubtypingRule" file="ObjectArraySupertypes_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.runtime.PatternUtil" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SContainmentLink" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.GeneratedMatchingPattern" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="java.util.Arrays" />
    <classNode dependClassName="jetbrains.mps.util.IterableUtil" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.PrimitiveArraySupertypes_SubtypingRule" file="PrimitiveArraySupertypes_SubtypingRule.java">
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="java.util.Arrays" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.PrimitiveSubtyping_SubtypingRule" file="PrimitiveSubtyping_SubtypingRule.java">
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.PrimitiveTypesInInstanceOfNotAllowed_NonTypesystemRule" file="PrimitiveTypesInInstanceOfNotAllowed_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.PutReexportForExtendedClassifier_QuickFix" file="PutReexportForExtendedClassifier_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.project.AbstractModule" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SModule" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.Queries" file="Queries.java">
    <classNode dependClassName="jetbrains.mps.smodel.SModelRepository" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.newTypesystem.SubtypingUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SModel" />
    <classNode dependClassName="java.util.Arrays" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.QuickFixForClassCreator_QuickFix" file="QuickFixForClassCreator_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.scopes.ClassifierScopes" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SModule" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SModel" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.QuickFixForDefaultClassCreator_QuickFix" file="QuickFixForDefaultClassCreator_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.RemoveAllJavaImports_QuickFix" file="RemoveAllJavaImports_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.RemoveDefaultEnumConstructor_QuickFix" file="RemoveDefaultEnumConstructor_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.RemoveExcessTypeCast_QuickFix" file="RemoveExcessTypeCast_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.RemoveGivenJavaImports_QuickFix" file="RemoveGivenJavaImports_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.RemoveImplicitConstructorFromAnonymousClass_QuickFix" file="RemoveImplicitConstructorFromAnonymousClass_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.RemoveInvisibleDeprecation_QuickFix" file="RemoveInvisibleDeprecation_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IBLDeprecatable__BehaviorDescriptor" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.RemoveRedundantExtends_QuickFix" file="RemoveRedundantExtends_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.RemoveUnnecessaryParentheses_QuickFix" file="RemoveUnnecessaryParentheses_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Expression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.RemoveUnusedAssignment_QuickFix" file="RemoveUnusedAssignment_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.RemoveUnusedField_QuickFix" file="RemoveUnusedField_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="java.lang.String" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.RemoveUnusedMethod_QuickFix" file="RemoveUnusedMethod_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="java.lang.String" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.RemoveUnusedPrivateClassifier_QuickFix" file="RemoveUnusedPrivateClassifier_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="java.lang.String" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.RemoveUnusedStaticField_QuickFix" file="RemoveUnusedStaticField_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="java.lang.String" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.ReplaceAlwaysTrueFalseWithLiteral_QuickFix" file="ReplaceAlwaysTrueFalseWithLiteral_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.ReplaceClassAntiquotationWithClassifierType_QuickFix" file="ReplaceClassAntiquotationWithClassifierType_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.ResolvedUnknownNode_QuickFix" file="ResolvedUnknownNode_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IYetUnresolved__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" file="RulesFunctions_BaseLanguage.java">
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime.YieldingIterator" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMethodLike__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.TypeVariableDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="java.lang.Deprecated" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.dataFlow.NullableState" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.AnalysisResult" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.dependencies.InferenceMethod" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.PropertyMessageTarget" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.Program" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ITranslator2" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.Instruction" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.lang.core.behavior.INamedConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.dependencies.CheckingMethod" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.SetConstructorDeclaration_QuickFix" file="SetConstructorDeclaration_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.SetDefaultEnumConstructurToEnumConstant_QuickFix" file="SetDefaultEnumConstructurToEnumConstant_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.SimplifyBinaryLogicalExpressionWithBooleanConstant_QuickFix" file="SimplifyBinaryLogicalExpressionWithBooleanConstant_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.ExpressionPresentationUtil" />
    <classNode dependClassName="java.lang.String" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.SimplifyCondition_QuickFix" file="SimplifyCondition_QuickFix.java">
    <classNode dependClassName="jetbrains.mps.smodel.action.SNodeFactoryOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Expression__BehaviorDescriptor" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="java.lang.String" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.SimplifyNotExpression_QuickFix" file="SimplifyNotExpression_QuickFix.java">
    <classNode dependClassName="jetbrains.mps.smodel.action.SNodeFactoryOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="java.lang.String" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.SimplifyWholeBinaryLogicalExpressionWithBooleanConstant_QuickFix" file="SimplifyWholeBinaryLogicalExpressionWithBooleanConstant_QuickFix.java">
    <classNode dependClassName="jetbrains.mps.smodel.action.SNodeFactoryOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.ExpressionPresentationUtil" />
    <classNode dependClassName="java.lang.String" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.SurroundExceptionWithTryCatch_QuickFix" file="SurroundExceptionWithTryCatch_QuickFix.java">
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ITryCatchStatement__BehaviorDescriptor" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.ThrownTypeVariableReferencesHelper" file="ThrownTypeVariableReferencesHelper.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Type__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.TypeVariableInInstanceOfNotAllowed_NonTypesystemRule" file="TypeVariableInInstanceOfNotAllowed_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.TypeVariableMatchUtil" file="TypeVariableMatchUtil.java">
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ITypeApplicable__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMethodCall__BehaviorDescriptor" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.dependencies.InferenceMethod" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Type__BehaviorDescriptor" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IGenericType__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.TypeVariableReference_compatibleWith_otherType_ComparisonRule" file="TypeVariableReference_compatibleWith_otherType_ComparisonRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ComparisonRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.TypesystemDescriptor" file="TypesystemDescriptor.java">
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_Expression_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_SetAccessor_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.PrimitiveArraySupertypes_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_TernaryOperator_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.any_type_supertypeof_bottom_InequationReplacementRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_StringLiteral_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_SwitchCase_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.generic_ClassfierType_subtypeOf_generic_ClassifierType_InequationReplacementRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_BaseAssignmentExpression_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_IfStatement_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_AbstractUnaryNumberOperation_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ParenthesisedExpressionSurroundedWithParentheses_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.OverloadedOpsProvider_OneTypeSpecified" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_ArrayCreatorWithInitializer_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_AdditionalForLoopVariable_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_FieldReferenceOperation_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_VariableAssignedToItself_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_ClassifierClassExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ConceptFunctionReturns_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UnqualifiedEnumConstUnderSwitch_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ForeachWithErasure_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_ClosureParameterReference_InferenceRule" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_AnnotationDuplication_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ClassDoesNotExtendFinalClass_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.float_extends_double_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ContinueStatement_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_EnumConstantReference_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_Property_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_StringBooleanOperation_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.float_unboxing_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_DimensionExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_DefaultClassCreator_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.any_type_comparable_with_nulltype_ComparisonRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.checkThrowedByThrowIsCaught_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.ObjectArraySupertypes_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_VarRef_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_AnnotationInstanceValue_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UnknownDotCall_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckForReexportExtendedClassifier_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_InstanceMethodDeclarationThrownExceptionsSignature_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_TypeInVarDecl_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UnknownConsCall_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UpperBoundType_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.subtyping_arrayType_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UsingStatement_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.Class_Void_weak_supertypeof_void_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_AnnotationMethodDeclarationReturnType_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_ArrayCloneOperation_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.NonFinalVariablesInAnonymousClass_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_NotExpressionCanBeSimplified_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.long_extends_float_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_ClassCreator_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.LowerBoundType_subtypeOf_bound_InequationReplacementRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_InnerClassesCantHaveStaticInitializer_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UninitializedLocalFieldInOperation_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UnknownNew_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_FloatingPointFloatConstant_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ArrayClone_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ThisExpression_ClassConceptSpecified_InGenerator_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_ElsifClause_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_FinalFieldWasAssigned_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_NonStaticClassInInterface_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_EnumValuesExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.double_unboxing_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_GenericNewExpression_PointingToNonStaticFromStatic_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.long_extends_integral_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_GetAccessor_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.checkTypesInForStatement_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_DefaultClassCreator_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_NullableStates_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckVariableDoubling_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_GetAccessor_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_IntegerLiteral_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_WhileStatement_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_AntiquotationContents_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_thisExpr_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_InstanceMethodCallOperation_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.supertypesOfUpperBoundType_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_CatchClause_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ConceptFunction_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UnusedPackageClassifier_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_IYetUnresolved_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_UnaryMinus_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_TypeVariableDeclarationDuplicateName_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.errors.IRuleConflictWarningProducer" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.Queries" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_InstanceMethodDeclarationDecreasesVisibility_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.InequationReplacementRule_Runtime" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UnusedPrivateClassifier_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ClassCreatorConstructorVisibility_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_PostfixIncrementExpression_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.ComparisonRule_Runtime" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.short_extends_int_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.EnumsAreEnum_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_Type_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_NativeMethod_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_TrimOperation_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_RecursiveClassifierSubtyping_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_ForeachStatement_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_NotExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UninitializedLocalField_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_FloatingPointConstant_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_BaseMethodDeclaration_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_DuplicateMethods_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_switchArgument_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.char_unboxing_SubtypingRule" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UnqualifiedEnumConstant_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_AbstractMethodsInClass_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_NonStaticInnerClassCreation_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_ArrayCreator_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_PropertyReferenceSetterVisibility_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_AnnotationInstanceExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.Interface_is_comparable_to_ClassifierType_ComparisonRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_FinalFieldReferenceNotAssigned_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.any_type_comparable_to_wildcard_type_ComparisonRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_DuplicateClassifierNames_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.genericArrayCreatorsWithInitializerAreIllegal_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_BaseMethodDeclaration_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_PostfixDecrementExpression_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_BinaryCompareOperation_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.int_unboxing_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_PropertyReferenceNotUsedInUnaryNumericOperations_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.Boolean_extends_boolean_2_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_ParenthesizedExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_PropertyReference_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_FinalVariableReferenceNotAssigned_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_DuplicatedConstructors_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_InstanceOf_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.Arrays_InequationReplacementRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ThisExpression_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.short_boxing_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_BooleanConst_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_LocalPropertyReferenceNotUsedInUnaryNumericOperations_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.IVariableConverter_Runtime" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.string_extends_java_lang_String_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ConstructorInvocationStatementIsFirstStatement_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_CastExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_DoWhileStatement_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_SetAccessor_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_AsExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.any_type_subtypeOf_LowerBoundType_InequationReplacementRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.double_boxing_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_OrExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_VariableArityType_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_BaseMethodDeclaration_UnreachableStatements_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.NonFinalParametersInAnonymousClass_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.int_extends_long_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ClassCreator_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_DuplicateEnumConstantMethods_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.byte_unboxing_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_ThisConstructorInvocation_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.int_boxing_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.Boolean_extends_primitive_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_AnnotationTarget_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_ArrayClassExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_AnonymousClassCreator_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.double_extends_floatingPoint_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.char_boxing_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_InnerClassesCantHaveStaticFields_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_PropertyValueReference_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_PrimitiveClassExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.any_type_supertypeof_nulltype_InequationReplacementRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.long_unboxing_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ClassShouldHaveConstructor_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_ConceptFunctionParameter_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_AnonymousClass_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.ClassifierType_NOT_subtypeOf_ClassifierType_InequationReplacementRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_FinalLocalFieldReferenceNotAssigned_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_GenericNewExpressionTypeParameters_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_notEqualsExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_FieldDuplication_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_ConceptFunction_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.checkUnnecessaryInstanceof_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_LeftParen_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_StaticInterfaceMethodCall_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_ArrayLiteral_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_IMethodCallTypeArgs_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_ReturnStatement_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_AnonymousClassHasArgumentsInGoodRole_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UnneededJavaImports_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_DuplicateEnumConstants_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.ClassifierType_comparableTo_raw_ClassifierType_ComparisonRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.PrimitiveTypesInInstanceOfNotAllowed_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_ArrayAccess_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_StaticFinalFieldNotAssigned_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_PrefixIncrementExpression_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.checkThrowsOfMethodIsCaught_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_CorrectScope_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_VariableDeclaration_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_StaticMethodCall_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_PrimitiveClassExpression_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UnknownLocalCall_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ArrayClassExpression_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_EqualsMethodTypes_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_AssertStatement_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_TypeVariableDeclarationWithInvalidWildTypes_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.TypeVariableInInstanceOfNotAllowed_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ArrayLength_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_BinaryOperation_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_parametersCount_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_LongLiteral_within_range_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.boolean_extends_Boolean_1_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.long_boxing_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.byte_extends_short_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_TypeInMethodCall_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.OverloadedOperationsTypesProvider" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckExtendedClassIsImported_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_IncompleteRightParen_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ClassifierOverridingFinalMethods_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_PropertyAssignedToItself_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_LocalPropertyReference_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_StaticFinalFieldWasAssigned_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_AnonymousClassCreator_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_BreakStatement_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_InstanceOfExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_EnumConstantMustUseExplicitConstructor_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_ClassConcept_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.wildCard_is_Object_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_AbstractClassifierReference_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ConstructorInvocationStatementHasConstructor_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_EnumConstantOverrideAnnotation_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ConstructorRecursiveInvocation_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ClassifierOverridingMethods_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ConceptFunctionParameter_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_StaticInitializer_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_InstanceMethodDeclarationForAbstractPrivateModifiers_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_GenericNewExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_BaseAssignmentExpression_InferenceRule" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ArrayCreator_NonTypesystemRule" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_EnumConstantHasUnimplementedMethods_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_TernaryOperationCanBeSimplified_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_DefaultSuperConstructorThrowables_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_BoundTypeinBoundType_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_BaseVariableReference_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_StringTypeClassifierType_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.supertypesOfLowerBoundType_InequationReplacementRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_AnnotationInstanceHasAllValues_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_HasSuperConstructorCall_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ExceptionWasNotCaught_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_InnerClassesCantHaveStaticDeclarations_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_NullLiteral_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ClassifierOverrideAnnotations_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckBinaryOperationPriority_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckExcessTypeCasts_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.byte_boxing_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_EnumConstantOverridingMethods_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.voidArraysAreIllegal_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.subtyping_classifier_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_BaseStringOperation_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_FinalAndAbstractMethod_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.checkAbstractClassCreators_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.char_compatibleWith_byte_ComparisonRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_EnumValueOfExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_IMethodCall_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_VolatileFieldNonFinal_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_FieldDeclarationCanBeLocalVariable_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_StringLiteral_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.short_unboxing_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_ArrayLengthOperation_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_NotExpression_NeedsParens_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_SuperConstructorInvocation_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_equalsExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_OverrideNullAnnotations_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_InstanceInitializer_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UnusedPrivateMethods_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_OperationAssignmentExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_SynchronizedStatement_NonFinalFields_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_CharConstant_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_NPENotEqualsExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_ValueParameter_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_StaticFieldDuplication_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_AnonymousClassWithNoConstructorInheritsDefaultConstructor_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.float_boxing_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UnqualifiedStaticFieldReference_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.raw_ClassifierType_subtypeOf_generic_ClassifierType_InequationReplacementRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.java_lang_String_extends_string_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_DotExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_SuperMethodCall_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.TypeVariableReference_compatibleWith_otherType_ComparisonRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_PropertyNameUniqueness_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_Switch_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_LocalStaticMethodCall_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.anonymousClassExtendsItsClassifier_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_CastExpressionLegalExpression_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UnneededMethodTypeParameters_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_StaticFieldDeclarationMustHaveInitializerInInterface_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_TernaryOperatorExpression_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_EnumConstantDeclaration_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typevar_comparable_with_classifier_type_ComparisonRule" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_InnerClassesCantHaveStaticMethods_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UnqualifiedStaticCall_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_EscapeOperation_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_VolatileStaticFieldNonFinal_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_IfStatementBooleanConstantInCondition_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.supertypes_of_typeVariableReference_SubtypingRule" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_FieldIsNeverUsedOrAssigned_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_SynchronizedStatement_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.PrimitiveSubtyping_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_SubstringExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_BaseVariableDeclaration_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_NPEEqualsExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_PrefixDecrementExpression_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_BitwiseNotExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_InnerClassesCantHaveStaticInnerClasses_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_InterfaceMethods_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_TypeVariableDeclarationForwardReferences_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_LocalMethodCall_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_AnnotationForVoidMethod_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_AnnotationInstance_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ClassifierType_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_BaseMethodDeclarationParameterUniqueNames_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.char_extends_int_SubtypingRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_EnumConstantHasConstructorDeclaration_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UnknownNameRef_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_andExpression_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_AnonymousClassHasConstructorDeclaration_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeof_LongLiteral_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_ExpressionStatement_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_UnusedStaticFields_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.any_type_supertypeof_wildcard_type_InequationReplacementRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.typeOf_ThrowStatement_InferenceRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_BinaryLogicalOperationCanBeSimplified_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_CaughtWasThrown_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.check_DynamicReference_NonTypesystemRule" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.genericArrayCreatorsAreIllegal_NonTypesystemRule" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.BaseHelginsDescriptor" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.VariableReferenceUtil" file="VariableReferenceUtil.java">
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckingUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.DataFlow" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.DataFlowManager" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.WriteInstruction" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.Program" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.Instruction" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.dependencies.CheckingMethod" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.StatementList__BehaviorDescriptor" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.anonymousClassExtendsItsClassifier_SubtypingRule" file="anonymousClassExtendsItsClassifier_SubtypingRule.java">
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.any_type_comparable_to_wildcard_type_ComparisonRule" file="any_type_comparable_to_wildcard_type_ComparisonRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ComparisonRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.any_type_comparable_with_nulltype_ComparisonRule" file="any_type_comparable_with_nulltype_ComparisonRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ComparisonRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.any_type_subtypeOf_LowerBoundType_InequationReplacementRule" file="any_type_subtypeOf_LowerBoundType_InequationReplacementRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.util.MatchingUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.runtime.PatternUtil" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SContainmentLink" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.GeneratedMatchingPattern" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.util.IterableUtil" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInequationReplacementRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.any_type_supertypeof_bottom_InequationReplacementRule" file="any_type_supertypeof_bottom_InequationReplacementRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInequationReplacementRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.any_type_supertypeof_nulltype_InequationReplacementRule" file="any_type_supertypeof_nulltype_InequationReplacementRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInequationReplacementRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.any_type_supertypeof_wildcard_type_InequationReplacementRule" file="any_type_supertypeof_wildcard_type_InequationReplacementRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInequationReplacementRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.boolean_extends_Boolean_1_SubtypingRule" file="boolean_extends_Boolean_1_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.byte_boxing_SubtypingRule" file="byte_boxing_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.byte_extends_short_SubtypingRule" file="byte_extends_short_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.byte_unboxing_SubtypingRule" file="byte_unboxing_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.runtime.PatternUtil" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.GeneratedMatchingPattern" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.char_boxing_SubtypingRule" file="char_boxing_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.char_compatibleWith_byte_ComparisonRule" file="char_compatibleWith_byte_ComparisonRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ComparisonRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.char_extends_int_SubtypingRule" file="char_extends_int_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.char_unboxing_SubtypingRule" file="char_unboxing_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.runtime.PatternUtil" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.GeneratedMatchingPattern" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.checkAbstractClassCreators_NonTypesystemRule" file="checkAbstractClassCreators_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.checkThrowedByThrowIsCaught_NonTypesystemRule" file="checkThrowedByThrowIsCaught_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.checkThrowsOfMethodIsCaught_NonTypesystemRule" file="checkThrowsOfMethodIsCaught_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.checkTypesInForStatement_InferenceRule" file="checkTypesInForStatement_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.checkUnnecessaryInstanceof_NonTypesystemRule" file="checkUnnecessaryInstanceof_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_AbstractClassifierReference_NonTypesystemRule" file="check_AbstractClassifierReference_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_AbstractMethodsInClass_NonTypesystemRule" file="check_AbstractMethodsInClass_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_AnnotationDuplication_NonTypesystemRule" file="check_AnnotationDuplication_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_AnnotationForVoidMethod_NonTypesystemRule" file="check_AnnotationForVoidMethod_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_AnnotationInstanceHasAllValues_NonTypesystemRule" file="check_AnnotationInstanceHasAllValues_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_AnnotationMethodDeclarationReturnType_NonTypesystemRule" file="check_AnnotationMethodDeclarationReturnType_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.AnnotationMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_AnnotationTarget_NonTypesystemRule" file="check_AnnotationTarget_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.AnnotationUtil" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_AnonymousClassCreator_NonTypesystemRule" file="check_AnonymousClassCreator_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Type__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_AnonymousClassHasArgumentsInGoodRole_NonTypesystemRule" file="check_AnonymousClassHasArgumentsInGoodRole_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_AnonymousClassHasConstructorDeclaration_NonTypesystemRule" file="check_AnonymousClassHasConstructorDeclaration_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_AnonymousClassWithNoConstructorInheritsDefaultConstructor_NonTypesystemRule" file="check_AnonymousClassWithNoConstructorInheritsDefaultConstructor_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_AntiquotationContents_NonTypesystemRule" file="check_AntiquotationContents_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.structure.behavior.AbstractConceptDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ArrayClassExpression_NonTypesystemRule" file="check_ArrayClassExpression_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ArrayClone_NonTypesystemRule" file="check_ArrayClone_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.smodel.DynamicReference" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SReference" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ArrayCreator_NonTypesystemRule" file="check_ArrayCreator_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ArrayLength_NonTypesystemRule" file="check_ArrayLength_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.smodel.DynamicReference" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SReference" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_BaseAssignmentExpression_NonTypesystemRule" file="check_BaseAssignmentExpression_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Expression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_BaseMethodDeclarationParameterUniqueNames_NonTypesystemRule" file="check_BaseMethodDeclarationParameterUniqueNames_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_BaseMethodDeclaration_NonTypesystemRule" file="check_BaseMethodDeclaration_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_BaseMethodDeclaration_UnreachableStatements_NonTypesystemRule" file="check_BaseMethodDeclaration_UnreachableStatements_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.DataFlowUtil" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMethodLike__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_BinaryLogicalOperationCanBeSimplified_NonTypesystemRule" file="check_BinaryLogicalOperationCanBeSimplified_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.smodel.action.SNodeFactoryOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Expression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SModule" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.ExpressionPresentationUtil" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_BoundTypeinBoundType_NonTypesystemRule" file="check_BoundTypeinBoundType_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Type__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_BreakStatement_NonTypesystemRule" file="check_BreakStatement_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.BreakStatement__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_CastExpressionLegalExpression_NonTypesystemRule" file="check_CastExpressionLegalExpression_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.actions.PrecedenceUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_CaughtWasThrown_NonTypesystemRule" file="check_CaughtWasThrown_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.StatementList__BehaviorDescriptor" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ClassCreatorConstructorVisibility_NonTypesystemRule" file="check_ClassCreatorConstructorVisibility_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.scopes.VisibilityUtil" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ClassCreator_NonTypesystemRule" file="check_ClassCreator_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.scopes.ClassifierScopes" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SModule" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SModel" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ClassDoesNotExtendFinalClass_NonTypesystemRule" file="check_ClassDoesNotExtendFinalClass_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ClassShouldHaveConstructor_NonTypesystemRule" file="check_ClassShouldHaveConstructor_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.PropertyMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.DefaultConstructorUtils" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ClassifierOverrideAnnotations_NonTypesystemRule" file="check_ClassifierOverrideAnnotations_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.OverridingMethodsFinder" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ClassifierOverridingFinalMethods_NonTypesystemRule" file="check_ClassifierOverridingFinalMethods_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.baseLanguage.tuples.runtime.Tuples" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.OverridingMethodsFinder" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ClassifierOverridingMethods_NonTypesystemRule" file="check_ClassifierOverridingMethods_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.baseLanguage.tuples.runtime.Tuples" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.OverridingMethodsFinder" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ClassifierType_NonTypesystemRule" file="check_ClassifierType_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Type__BehaviorDescriptor" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ConceptFunctionParameter_NonTypesystemRule" file="check_ConceptFunctionParameter_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ConceptFunctionParameter__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ConceptFunction__BehaviorDescriptor" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ConceptFunctionReturns_NonTypesystemRule" file="check_ConceptFunctionReturns_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMethodLike__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ConceptFunction__BehaviorDescriptor" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.StatementList__BehaviorDescriptor" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ConceptFunction_NonTypesystemRule" file="check_ConceptFunction_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.DataFlowUtil" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ConceptFunction__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ConstructorInvocationStatementHasConstructor_NonTypesystemRule" file="check_ConstructorInvocationStatementHasConstructor_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ConstructorInvocationStatementIsFirstStatement_NonTypesystemRule" file="check_ConstructorInvocationStatementIsFirstStatement_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.StatementList__BehaviorDescriptor" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ConstructorRecursiveInvocation_NonTypesystemRule" file="check_ConstructorRecursiveInvocation_NonTypesystemRule.java">
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.PropertyMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ConstructorDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.StatementList__BehaviorDescriptor" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ContinueStatement_NonTypesystemRule" file="check_ContinueStatement_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ContinueStatement__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_CorrectScope_NonTypesystemRule" file="check_CorrectScope_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ThisExpression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_DefaultClassCreator_NonTypesystemRule" file="check_DefaultClassCreator_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_DefaultSuperConstructorThrowables_NonTypesystemRule" file="check_DefaultSuperConstructorThrowables_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ConstructorDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_DuplicateClassifierNames_NonTypesystemRule" file="check_DuplicateClassifierNames_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.PropertyMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMemberContainer__BehaviorDescriptor" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_DuplicateEnumConstantMethods_NonTypesystemRule" file="check_DuplicateEnumConstantMethods_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.PropertyMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.lang.core.behavior.INamedConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_DuplicateEnumConstants_NonTypesystemRule" file="check_DuplicateEnumConstants_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_DuplicateMethods_NonTypesystemRule" file="check_DuplicateMethods_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IClassifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IClassifierType__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_DuplicatedConstructors_NonTypesystemRule" file="check_DuplicatedConstructors_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_DynamicReference_NonTypesystemRule" file="check_DynamicReference_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.smodel.DynamicReference" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.ReferenceMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SReference" />
    <classNode dependClassName="jetbrains.mps.smodel.DefaultSModelDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SModel" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_EnumConstantHasConstructorDeclaration_NonTypesystemRule" file="check_EnumConstantHasConstructorDeclaration_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_EnumConstantHasUnimplementedMethods_NonTypesystemRule" file="check_EnumConstantHasUnimplementedMethods_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMemberContainer__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_EnumConstantMustUseExplicitConstructor_NonTypesystemRule" file="check_EnumConstantMustUseExplicitConstructor_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_EnumConstantOverrideAnnotation_NonTypesystemRule" file="check_EnumConstantOverrideAnnotation_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.OverridingMethodsFinder" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_EnumConstantOverridingMethods_NonTypesystemRule" file="check_EnumConstantOverridingMethods_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.baseLanguage.tuples.runtime.Tuples" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.OverridingMethodsFinder" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_EqualsMethodTypes_NonTypesystemRule" file="check_EqualsMethodTypes_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IOperation__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ExceptionWasNotCaught_NonTypesystemRule" file="check_ExceptionWasNotCaught_NonTypesystemRule.java">
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ITryCatchStatement__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ExpressionStatement_NonTypesystemRule" file="check_ExpressionStatement_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Expression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ExpressionStatement__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_Expression_NonTypesystemRule" file="check_Expression_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Expression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_FieldDeclarationCanBeLocalVariable_NonTypesystemRule" file="check_FieldDeclarationCanBeLocalVariable_NonTypesystemRule.java">
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.MPSProgramBuilder" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SRepository" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.Program" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.DataFlowManager" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.ReadInstruction" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_FieldDuplication_NonTypesystemRule" file="check_FieldDuplication_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.PropertyMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckingUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_FieldIsNeverUsedOrAssigned_NonTypesystemRule" file="check_FieldIsNeverUsedOrAssigned_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.VariableReferenceUtil" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_FinalAndAbstractMethod_NonTypesystemRule" file="check_FinalAndAbstractMethod_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.PropertyMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_FinalFieldReferenceNotAssigned_NonTypesystemRule" file="check_FinalFieldReferenceNotAssigned_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckingUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_FinalFieldWasAssigned_NonTypesystemRule" file="check_FinalFieldWasAssigned_NonTypesystemRule.java">
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckingUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_FinalLocalFieldReferenceNotAssigned_NonTypesystemRule" file="check_FinalLocalFieldReferenceNotAssigned_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckingUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_FinalVariableReferenceNotAssigned_NonTypesystemRule" file="check_FinalVariableReferenceNotAssigned_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.VariableReferenceUtil" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ForeachWithErasure_NonTypesystemRule" file="check_ForeachWithErasure_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.util.MatchingUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SContainmentLink" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.util.IterableUtil" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.runtime.PatternUtil" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.GeneratedMatchingPattern" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_GenericNewExpressionTypeParameters_NonTypesystemRule" file="check_GenericNewExpressionTypeParameters_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Type__BehaviorDescriptor" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_GenericNewExpression_PointingToNonStaticFromStatic_NonTypesystemRule" file="check_GenericNewExpression_PointingToNonStaticFromStatic_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IClassifierMember__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime.Wrappers" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_GetAccessor_NonTypesystemRule" file="check_GetAccessor_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_HasSuperConstructorCall_NonTypesystemRule" file="check_HasSuperConstructorCall_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ConstructorDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_IMethodCallTypeArgs_NonTypesystemRule" file="check_IMethodCallTypeArgs_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_IfStatementBooleanConstantInCondition_NonTypesystemRule" file="check_IfStatementBooleanConstantInCondition_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_IncompleteRightParen_NonTypesystemRule" file="check_IncompleteRightParen_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_InnerClassesCantHaveStaticDeclarations_NonTypesystemRule" file="check_InnerClassesCantHaveStaticDeclarations_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IClassifierMember__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.PropertyMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_InnerClassesCantHaveStaticFields_NonTypesystemRule" file="check_InnerClassesCantHaveStaticFields_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IClassifierMember__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_InnerClassesCantHaveStaticInitializer_NonTypesystemRule" file="check_InnerClassesCantHaveStaticInitializer_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IClassifierMember__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_InnerClassesCantHaveStaticInnerClasses_NonTypesystemRule" file="check_InnerClassesCantHaveStaticInnerClasses_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IClassifierMember__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_InnerClassesCantHaveStaticMethods_NonTypesystemRule" file="check_InnerClassesCantHaveStaticMethods_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IClassifierMember__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_InstanceInitializer_NonTypesystemRule" file="check_InstanceInitializer_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.DataFlowUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_InstanceMethodDeclarationDecreasesVisibility_NonTypesystemRule" file="check_InstanceMethodDeclarationDecreasesVisibility_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.InstanceMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_InstanceMethodDeclarationForAbstractPrivateModifiers_NonTypesystemRule" file="check_InstanceMethodDeclarationForAbstractPrivateModifiers_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_InstanceMethodDeclarationThrownExceptionsSignature_NonTypesystemRule" file="check_InstanceMethodDeclarationThrownExceptionsSignature_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.InstanceMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.ThrownTypeVariableReferencesHelper" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_InstanceOf_NonTypesystemRule" file="check_InstanceOf_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.actions.PrecedenceUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Type__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_InterfaceMethods_NonTypesystemRule" file="check_InterfaceMethods_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_LeftParen_NonTypesystemRule" file="check_LeftParen_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_LocalPropertyReferenceNotUsedInUnaryNumericOperations_NonTypesystemRule" file="check_LocalPropertyReferenceNotUsedInUnaryNumericOperations_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_LocalStaticMethodCall_NonTypesystemRule" file="check_LocalStaticMethodCall_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.scopes.ClassifierScopeUtils" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_LongLiteral_within_range_NonTypesystemRule" file="check_LongLiteral_within_range_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.Long" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.NumberFormatException" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_NativeMethod_NonTypesystemRule" file="check_NativeMethod_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.PropertyMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_NonStaticClassInInterface_NonTypesystemRule" file="check_NonStaticClassInInterface_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IClassifierMember__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_NonStaticInnerClassCreation_NonTypesystemRule" file="check_NonStaticInnerClassCreation_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMethodCall__BehaviorDescriptor" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_NotExpressionCanBeSimplified_NonTypesystemRule" file="check_NotExpressionCanBeSimplified_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Expression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SModule" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_NotExpression_NeedsParens_NonTypesystemRule" file="check_NotExpression_NeedsParens_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.actions.PrecedenceUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_NullableStates_NonTypesystemRule" file="check_NullableStates_NonTypesystemRule.java">
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.dataFlow.NullableUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.analyzers.runtime.framework.CustomAnalyzerRunner" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMethodLike__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.dataFlow.NullableAnalyzerRunner" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.dataFlow.NullableState" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.tuples.runtime.Tuples" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.AnalysisResult" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.WriteInstruction" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.Program" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.IfJumpInstruction" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.generator.TransientModelsModule" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.DataFlowUtil" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.Instruction" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_OverrideNullAnnotations_NonTypesystemRule" file="check_OverrideNullAnnotations_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ParameterDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ParenthesisedExpressionSurroundedWithParentheses_NonTypesystemRule" file="check_ParenthesisedExpressionSurroundedWithParentheses_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Expression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_PostfixDecrementExpression_NonTypesystemRule" file="check_PostfixDecrementExpression_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Expression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_PostfixIncrementExpression_NonTypesystemRule" file="check_PostfixIncrementExpression_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Expression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_PrefixDecrementExpression_NonTypesystemRule" file="check_PrefixDecrementExpression_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Expression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_PrefixIncrementExpression_NonTypesystemRule" file="check_PrefixIncrementExpression_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Expression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_PrimitiveClassExpression_NonTypesystemRule" file="check_PrimitiveClassExpression_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_PropertyAssignedToItself_NonTypesystemRule" file="check_PropertyAssignedToItself_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_PropertyNameUniqueness_NonTypesystemRule" file="check_PropertyNameUniqueness_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Property__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IClassifierType__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.lang.core.behavior.INamedConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_PropertyReferenceNotUsedInUnaryNumericOperations_NonTypesystemRule" file="check_PropertyReferenceNotUsedInUnaryNumericOperations_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_PropertyReferenceSetterVisibility_NonTypesystemRule" file="check_PropertyReferenceSetterVisibility_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.PropertyReference__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Property__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_RecursiveClassifierSubtyping_NonTypesystemRule" file="check_RecursiveClassifierSubtyping_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.PropertyMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.scopes.ClassifierScopeUtils" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_SetAccessor_NonTypesystemRule" file="check_SetAccessor_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_StaticFieldDeclarationMustHaveInitializerInInterface_NonTypesystemRule" file="check_StaticFieldDeclarationMustHaveInitializerInInterface_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_StaticFieldDuplication_NonTypesystemRule" file="check_StaticFieldDuplication_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.PropertyMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckingUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_StaticFinalFieldNotAssigned_NonTypesystemRule" file="check_StaticFinalFieldNotAssigned_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckingUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_StaticFinalFieldWasAssigned_NonTypesystemRule" file="check_StaticFinalFieldWasAssigned_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckingUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_StaticInitializer_NonTypesystemRule" file="check_StaticInitializer_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.DataFlowUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_StaticInterfaceMethodCall_NonTypesystemRule" file="check_StaticInterfaceMethodCall_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.project.Project" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SModule" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.project.SModuleOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SModel" />
    <classNode dependClassName="jetbrains.mps.compiler.JavaCompilerOptionsComponent" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_StringLiteral_NonTypesystemRule" file="check_StringLiteral_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.StringLiteral__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_StringTypeClassifierType_NonTypesystemRule" file="check_StringTypeClassifierType_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_SynchronizedStatement_NonFinalFields_NonTypesystemRule" file="check_SynchronizedStatement_NonFinalFields_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_TernaryOperationCanBeSimplified_NonTypesystemRule" file="check_TernaryOperationCanBeSimplified_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Expression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SModule" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_TernaryOperatorExpression_NonTypesystemRule" file="check_TernaryOperatorExpression_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ThisExpression_ClassConceptSpecified_InGenerator_NonTypesystemRule" file="check_ThisExpression_ClassConceptSpecified_InGenerator_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.smodel.Generator" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SModule" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SModel" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_ThisExpression_NonTypesystemRule" file="check_ThisExpression_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ThisExpression__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassifierMember__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_TypeInMethodCall_NonTypesystemRule" file="check_TypeInMethodCall_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Type__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_TypeInVarDecl_NonTypesystemRule" file="check_TypeInVarDecl_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Type__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_TypeVariableDeclarationDuplicateName_NonTypesystemRule" file="check_TypeVariableDeclarationDuplicateName_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_TypeVariableDeclarationForwardReferences_NonTypesystemRule" file="check_TypeVariableDeclarationForwardReferences_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_TypeVariableDeclarationWithInvalidWildTypes_NonTypesystemRule" file="check_TypeVariableDeclarationWithInvalidWildTypes_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Type__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_Type_NonTypesystemRule" file="check_Type_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UninitializedLocalFieldInOperation_NonTypesystemRule" file="check_UninitializedLocalFieldInOperation_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IOperation__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.VariableReferenceUtil" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UninitializedLocalField_NonTypesystemRule" file="check_UninitializedLocalField_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.Program" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.VariableReferenceUtil" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.DataFlow" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.DataFlowManager" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UnknownConsCall_NonTypesystemRule" file="check_UnknownConsCall_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IYetUnresolved__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UnknownDotCall_NonTypesystemRule" file="check_UnknownDotCall_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IYetUnresolved__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UnknownLocalCall_NonTypesystemRule" file="check_UnknownLocalCall_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IYetUnresolved__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UnknownNameRef_NonTypesystemRule" file="check_UnknownNameRef_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IYetUnresolved__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UnknownNew_NonTypesystemRule" file="check_UnknownNew_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IYetUnresolved__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UnneededJavaImports_NonTypesystemRule" file="check_UnneededJavaImports_NonTypesystemRule.java">
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.DequeSequence" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Tokens__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor" />
    <classNode dependClassName="java.util.LinkedList" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.DynamicReference" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="java.util.Deque" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UnneededMethodTypeParameters_NonTypesystemRule" file="check_UnneededMethodTypeParameters_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UnqualifiedEnumConstUnderSwitch_NonTypesystemRule" file="check_UnqualifiedEnumConstUnderSwitch_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.smodel.DynamicReference" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UnqualifiedEnumConstant_NonTypesystemRule" file="check_UnqualifiedEnumConstant_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.baseLanguage.scopes.Members" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ResolveUnknownUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Tokens__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.JavaImports__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.DynamicReference" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UnqualifiedStaticCall_NonTypesystemRule" file="check_UnqualifiedStaticCall_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.StaticReference" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SReference" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.scope.Scope" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UnqualifiedStaticFieldReference_NonTypesystemRule" file="check_UnqualifiedStaticFieldReference_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.StaticReference" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SReference" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.scope.Scope" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UnusedPackageClassifier_NonTypesystemRule" file="check_UnusedPackageClassifier_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ITranslator2" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SReference" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UnusedPrivateClassifier_NonTypesystemRule" file="check_UnusedPrivateClassifier_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ITranslator2" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SReference" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UnusedPrivateMethods_NonTypesystemRule" file="check_UnusedPrivateMethods_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.PropertyMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ClassConcept__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UnusedStaticFields_NonTypesystemRule" file="check_UnusedStaticFields_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.VariableReferenceUtil" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UpperBoundType_NonTypesystemRule" file="check_UpperBoundType_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_UsingStatement_NonTypesystemRule" file="check_UsingStatement_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.baseLanguage.scopes.Members" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_VariableArityType_NonTypesystemRule" file="check_VariableArityType_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_VariableAssignedToItself_NonTypesystemRule" file="check_VariableAssignedToItself_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_VolatileFieldNonFinal_NonTypesystemRule" file="check_VolatileFieldNonFinal_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_VolatileStaticFieldNonFinal_NonTypesystemRule" file="check_VolatileStaticFieldNonFinal_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_parametersCount_NonTypesystemRule" file="check_parametersCount_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.check_switchArgument_NonTypesystemRule" file="check_switchArgument_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IWillBeClassifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.double_boxing_SubtypingRule" file="double_boxing_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.double_extends_floatingPoint_SubtypingRule" file="double_extends_floatingPoint_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.double_unboxing_SubtypingRule" file="double_unboxing_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.runtime.PatternUtil" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.GeneratedMatchingPattern" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.float_boxing_SubtypingRule" file="float_boxing_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.float_extends_double_SubtypingRule" file="float_extends_double_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.float_unboxing_SubtypingRule" file="float_unboxing_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.runtime.PatternUtil" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.GeneratedMatchingPattern" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.genericArrayCreatorsAreIllegal_NonTypesystemRule" file="genericArrayCreatorsAreIllegal_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.genericArrayCreatorsWithInitializerAreIllegal_NonTypesystemRule" file="genericArrayCreatorsWithInitializerAreIllegal_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.generic_ClassfierType_subtypeOf_generic_ClassifierType_InequationReplacementRule" file="generic_ClassfierType_subtypeOf_generic_ClassifierType_InequationReplacementRule.java">
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.util.MatchingUtil" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.GeneratedMatchingPattern" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IGenericType__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInequationReplacementRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.int_boxing_SubtypingRule" file="int_boxing_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.int_extends_long_SubtypingRule" file="int_extends_long_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.int_unboxing_SubtypingRule" file="int_unboxing_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.runtime.PatternUtil" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.GeneratedMatchingPattern" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.java_lang_String_extends_string_SubtypingRule" file="java_lang_String_extends_string_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.runtime.PatternUtil" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.GeneratedMatchingPattern" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.long_boxing_SubtypingRule" file="long_boxing_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.long_extends_float_SubtypingRule" file="long_extends_float_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.long_extends_integral_SubtypingRule" file="long_extends_integral_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.long_unboxing_SubtypingRule" file="long_unboxing_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.runtime.PatternUtil" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.GeneratedMatchingPattern" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.makeReferenceStatic_QuickFix" file="makeReferenceStatic_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SReference" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.StaticReference" />
    <classNode dependClassName="jetbrains.mps.extapi.model.SModelBase" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.raw_ClassifierType_subtypeOf_generic_ClassifierType_InequationReplacementRule" file="raw_ClassifierType_subtypeOf_generic_ClassifierType_InequationReplacementRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInequationReplacementRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.rebalanceCastExpression_QuickFix" file="rebalanceCastExpression_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.replaceNode_QuickFix" file="replaceNode_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.short_boxing_SubtypingRule" file="short_boxing_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.short_extends_int_SubtypingRule" file="short_extends_int_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.short_unboxing_SubtypingRule" file="short_unboxing_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.runtime.PatternUtil" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.GeneratedMatchingPattern" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.string_extends_java_lang_String_SubtypingRule" file="string_extends_java_lang_String_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.subtyping_arrayType_SubtypingRule" file="subtyping_arrayType_SubtypingRule.java">
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.subtyping_classifier_SubtypingRule" file="subtyping_classifier_SubtypingRule.java">
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.supertypesOfLowerBoundType_InequationReplacementRule" file="supertypesOfLowerBoundType_InequationReplacementRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInequationReplacementRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.supertypesOfUpperBoundType_SubtypingRule" file="supertypesOfUpperBoundType_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.supertypes_of_typeVariableReference_SubtypingRule" file="supertypes_of_typeVariableReference_SubtypingRule.java">
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_ArrayAccess_InferenceRule" file="typeOf_ArrayAccess_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_ArrayCreatorWithInitializer_InferenceRule" file="typeOf_ArrayCreatorWithInitializer_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_AssertStatement_InferenceRule" file="typeOf_AssertStatement_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_BaseMethodDeclaration_InferenceRule" file="typeOf_BaseMethodDeclaration_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckingUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMethodLike__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_BooleanConst_InferenceRule" file="typeOf_BooleanConst_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_CastExpression_InferenceRule" file="typeOf_CastExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_CatchClause_InferenceRule" file="typeOf_CatchClause_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_ClassifierClassExpression_InferenceRule" file="typeOf_ClassifierClassExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_ClosureParameterReference_InferenceRule" file="typeOf_ClosureParameterReference_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_ConceptFunctionParameter_InferenceRule" file="typeOf_ConceptFunctionParameter_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ConceptFunctionParameter__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_ConceptFunction_InferenceRule" file="typeOf_ConceptFunction_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMethodLike__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ConceptFunction__BehaviorDescriptor" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_DoWhileStatement_InferenceRule" file="typeOf_DoWhileStatement_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_EnumConstantDeclaration_InferenceRule" file="typeOf_EnumConstantDeclaration_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_EnumConstantReference_InferenceRule" file="typeOf_EnumConstantReference_InferenceRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_FloatingPointConstant_InferenceRule" file="typeOf_FloatingPointConstant_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_ForeachStatement_InferenceRule" file="typeOf_ForeachStatement_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_GenericNewExpression_InferenceRule" file="typeOf_GenericNewExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_IfStatement_InferenceRule" file="typeOf_IfStatement_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_InstanceOfExpression_InferenceRule" file="typeOf_InstanceOfExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_IntegerLiteral_InferenceRule" file="typeOf_IntegerLiteral_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_NotExpression_InferenceRule" file="typeOf_NotExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_NullLiteral_InferenceRule" file="typeOf_NullLiteral_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_OrExpression_InferenceRule" file="typeOf_OrExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_ParenthesizedExpression_InferenceRule" file="typeOf_ParenthesizedExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_ReturnStatement_InferenceRule" file="typeOf_ReturnStatement_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_StringLiteral_InferenceRule" file="typeOf_StringLiteral_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_Switch_InferenceRule" file="typeOf_Switch_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_TernaryOperator_InferenceRule" file="typeOf_TernaryOperator_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_ThrowStatement_InferenceRule" file="typeOf_ThrowStatement_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_VarRef_InferenceRule" file="typeOf_VarRef_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IGenericType__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_WhileStatement_InferenceRule" file="typeOf_WhileStatement_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_andExpression_InferenceRule" file="typeOf_andExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_equalsExpression_InferenceRule" file="typeOf_equalsExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_notEqualsExpression_InferenceRule" file="typeOf_notEqualsExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeOf_thisExpr_InferenceRule" file="typeOf_thisExpr_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_AbstractUnaryNumberOperation_InferenceRule" file="typeof_AbstractUnaryNumberOperation_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.IMatchingPattern" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_AdditionalForLoopVariable_InferenceRule" file="typeof_AdditionalForLoopVariable_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_AnnotationInstanceExpression_InferenceRule" file="typeof_AnnotationInstanceExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_AnnotationInstanceValue_InferenceRule" file="typeof_AnnotationInstanceValue_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_AnnotationInstance_InferenceRule" file="typeof_AnnotationInstance_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_AnonymousClassCreator_InferenceRule" file="typeof_AnonymousClassCreator_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_AnonymousClass_InferenceRule" file="typeof_AnonymousClass_InferenceRule.java">
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ITypeApplicable__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.ReferenceMessageTarget" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IGenericType__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_ArrayClassExpression_InferenceRule" file="typeof_ArrayClassExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_ArrayCloneOperation_InferenceRule" file="typeof_ArrayCloneOperation_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_ArrayCreator_InferenceRule" file="typeof_ArrayCreator_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_ArrayLengthOperation_InferenceRule" file="typeof_ArrayLengthOperation_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_ArrayLiteral_InferenceRule" file="typeof_ArrayLiteral_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_AsExpression_InferenceRule" file="typeof_AsExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_BaseAssignmentExpression_InferenceRule" file="typeof_BaseAssignmentExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckingUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_BaseStringOperation_InferenceRule" file="typeof_BaseStringOperation_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IOperation__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_BaseVariableDeclaration_InferenceRule" file="typeof_BaseVariableDeclaration_InferenceRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_BaseVariableReference_InferenceRule" file="typeof_BaseVariableReference_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_BinaryCompareOperation_InferenceRule" file="typeof_BinaryCompareOperation_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_BinaryOperation_InferenceRule" file="typeof_BinaryOperation_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.IRuleConflictWarningProducer" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_BitwiseNotExpression_InferenceRule" file="typeof_BitwiseNotExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_CharConstant_InferenceRule" file="typeof_CharConstant_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_ClassConcept_NonTypesystemRule" file="typeof_ClassConcept_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMemberContainer__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_ClassCreator_InferenceRule" file="typeof_ClassCreator_InferenceRule.java">
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ITypeApplicable__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IGenericType__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_DefaultClassCreator_InferenceRule" file="typeof_DefaultClassCreator_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_DimensionExpression_InferenceRule" file="typeof_DimensionExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_DotExpression_InferenceRule" file="typeof_DotExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_ElsifClause_InferenceRule" file="typeof_ElsifClause_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_EnumValueOfExpression_InferenceRule" file="typeof_EnumValueOfExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_EnumValuesExpression_InferenceRule" file="typeof_EnumValuesExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_EscapeOperation_InferenceRule" file="typeof_EscapeOperation_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_FieldReferenceOperation_InferenceRule" file="typeof_FieldReferenceOperation_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IGenericType__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IOperation__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_FloatingPointFloatConstant_InferenceRule" file="typeof_FloatingPointFloatConstant_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_GetAccessor_InferenceRule" file="typeof_GetAccessor_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.DataFlowUtil" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMethodLike__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_IMethodCall_InferenceRule" file="typeof_IMethodCall_InferenceRule.java">
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ITypeApplicable__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMethodCall__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.TypeVariableMatchUtil" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IGenericType__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_IYetUnresolved_InferenceRule" file="typeof_IYetUnresolved_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_InstanceMethodCallOperation_InferenceRule" file="typeof_InstanceMethodCallOperation_InferenceRule.java">
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ITypeApplicable__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IOperation__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMethodCall__BehaviorDescriptor" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.TypeVariableMatchUtil" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IGenericType__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_LocalMethodCall_InferenceRule" file="typeof_LocalMethodCall_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.TypeVariableMatchUtil" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ITypeApplicable__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IGenericType__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMethodCall__BehaviorDescriptor" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_LocalPropertyReference_InferenceRule" file="typeof_LocalPropertyReference_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_LongLiteral_InferenceRule" file="typeof_LongLiteral_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_NPEEqualsExpression_InferenceRule" file="typeof_NPEEqualsExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_NPENotEqualsExpression_InferenceRule" file="typeof_NPENotEqualsExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_OperationAssignmentExpression_InferenceRule" file="typeof_OperationAssignmentExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.errors.IRuleConflictWarningProducer" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_PrimitiveClassExpression_InferenceRule" file="typeof_PrimitiveClassExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Type__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_PropertyReference_InferenceRule" file="typeof_PropertyReference_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IOperation__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_PropertyValueReference_InferenceRule" file="typeof_PropertyValueReference_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_Property_InferenceRule" file="typeof_Property_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_SetAccessor_InferenceRule" file="typeof_SetAccessor_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.DataFlowUtil" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_StaticMethodCall_InferenceRule" file="typeof_StaticMethodCall_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.TypeVariableMatchUtil" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_StringBooleanOperation_InferenceRule" file="typeof_StringBooleanOperation_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_SubstringExpression_InferenceRule" file="typeof_SubstringExpression_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_SuperConstructorInvocation_InferenceRule" file="typeof_SuperConstructorInvocation_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ITypeApplicable__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IGenericType__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_SuperMethodCall_InferenceRule" file="typeof_SuperMethodCall_InferenceRule.java">
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.ITypeApplicable__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IMethodCall__BehaviorDescriptor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ITranslator2" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.IGenericType__BehaviorDescriptor" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.behavior.Classifier__BehaviorDescriptor" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_SwitchCase_InferenceRule" file="typeof_SwitchCase_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_SynchronizedStatement_InferenceRule" file="typeof_SynchronizedStatement_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_ThisConstructorInvocation_NonTypesystemRule" file="typeof_ThisConstructorInvocation_NonTypesystemRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_TrimOperation_InferenceRule" file="typeof_TrimOperation_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_UnaryMinus_InferenceRule" file="typeof_UnaryMinus_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.errors.IRuleConflictWarningProducer" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_ValueParameter_InferenceRule" file="typeof_ValueParameter_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typeof_VariableDeclaration_InferenceRule" file="typeof_VariableDeclaration_InferenceRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.EquationInfo" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.typesystem.CheckingUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.errors.BaseQuickFixProvider" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.typevar_comparable_with_classifier_type_ComparisonRule" file="typevar_comparable_with_classifier_type_ComparisonRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ComparisonRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.voidArraysAreIllegal_NonTypesystemRule" file="voidArraysAreIllegal_NonTypesystemRule.java">
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.wildCard_is_Object_SubtypingRule" file="wildCard_is_Object_SubtypingRule.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.wrapCastExpressionInParentheses_QuickFix" file="wrapCastExpressionInParentheses_QuickFix.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.typesystem.wrapMisplacedTernaryOperatorInParens_QuickFix" file="wrapMisplacedTernaryOperatorInParens_QuickFix.java">
    <classNode dependClassName="jetbrains.mps.smodel.action.SNodeFactoryOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.errors.QuickFix_Runtime" />
  </dependency>
</dependenciesRoot>

