<?xml version="1.0" encoding="UTF-8"?>
<dependenciesRoot>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.AbstractExtractMethodRefactoringProcessor" file="AbstractExtractMethodRefactoringProcessor.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.lang.IllegalStateException" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MoveRefactoringUtils" />
    <classNode dependClassName="jetbrains.mps.smodel.behaviour.BHReflection" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.core.aspects.behaviour.SMethodTrimmedId" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IExtractMethodRefactoringProcessor" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.AbstractIntroduceFieldRefactoring" file="AbstractIntroduceFieldRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime.Wrappers" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.FieldInitializationPlace" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.ModelAccess" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceVariableRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.AbstractStaticContainerProcessor" file="AbstractStaticContainerProcessor.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.AbstractExtractMethodRefactoringProcessor" />
    <classNode dependClassName="java.lang.Override" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IStaticContainerProcessor" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.BasicMoveRefactoring" file="BasicMoveRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.ide.findusages.model.SearchResult" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.ide.findusages.model.SearchResults" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MoveRefactoringUtils" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureParameters" file="ChangeMethodSignatureParameters.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.util.MatchingUtil" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureRefactoring" file="ChangeMethodSignatureRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ChangeMethodSignatureParameters" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodCallAdapter" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ClassExtractMethodRefactoringProcessor" file="ClassExtractMethodRefactoringProcessor.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.AbstractExtractMethodRefactoringProcessor" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ClassRefactoringUtils" file="ClassRefactoringUtils.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodCallAdapter" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ClassStaticContainerProcessor" file="ClassStaticContainerProcessor.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.AbstractStaticContainerProcessor" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ConvertAnonymousRefactoring" file="ConvertAnonymousRefactoring.java">
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.behaviour.BHReflection" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IMapping" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.smodel.search.SModelSearchUtil" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.util.NameUtil" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ITranslator2" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.core.aspects.behaviour.SMethodTrimmedId" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations" />
    <classNode dependClassName="java.util.LinkedHashMap" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MemberInsertingUtils" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" file="ExtractMethodFactory.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodWithExitPoints" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodWithReturn" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodWithOutputVariable" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFromExpressionRefactoring" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFromStatementsRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringAnalyzer" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFromExpressionRefactoring" file="ExtractMethodFromExpressionRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodMatch" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.ModelAccess" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.CopyUtil" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="org.jetbrains.annotations.NotNull" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFromStatementsRefactoring" file="ExtractMethodFromStatementsRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodMatch" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.ModelAccess" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.CopyUtil" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" file="ExtractMethodRefactoring.java">
    <classNode dependClassName="java.lang.IllegalArgumentException" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodParameter" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodOptimizer" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodMatch" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MoveRefactoringUtils" />
    <classNode dependClassName="jetbrains.mps.smodel.behaviour.BHReflection" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IExtractMethodRefactoringProcessor" />
    <classNode dependClassName="org.jetbrains.annotations.NotNull" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodDuplicatesFinder" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringAnalyzer" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.AbstractExtractMethodRefactoringProcessor" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ClassStaticContainerProcessor" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="org.jetbrains.annotations.Nullable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.core.aspects.behaviour.SMethodTrimmedId" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IStaticContainerProcessor" />
    <classNode dependClassName="java.util.HashSet" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringAnalyzer" file="ExtractMethodRefactoringAnalyzer.java">
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.analyzers.ReachabilityAnalyzer" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.MPSProgramBuilder" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodParameter" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SRepository" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.util.MatchingUtil" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.behaviour.BHReflection" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IExtractMethodRefactoringProcessor" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.DataFlowManager" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.AbstractExtractMethodRefactoringProcessor" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.AnalysisResult" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.WriteInstruction" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.Program" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ClassExtractMethodRefactoringProcessor" />
    <classNode dependClassName="jetbrains.mps.core.aspects.behaviour.SMethodTrimmedId" />
    <classNode dependClassName="java.util.LinkedHashMap" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.Instruction" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.VarSet" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.analyzers.LivenessAnalyzer" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.analyzers.ReachingDefinitionsAnalyzer" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.EndInstruction" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.ReadInstruction" />
    <classNode dependClassName="java.util.LinkedHashSet" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" file="ExtractMethodRefactoringParameters.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodParameter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.util.MatchingUtil" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.behaviour.BHReflection" />
    <classNode dependClassName="jetbrains.mps.core.aspects.behaviour.SMethodTrimmedId" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.VisibilityLevel" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringAnalyzer" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodModel" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodWithExitPoints" file="ExtractMethodWithExitPoints.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodMatch" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.ModelAccess" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFromStatementsRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodWithOutputVariable" file="ExtractMethodWithOutputVariable.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodMatch" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.behaviour.BHReflection" />
    <classNode dependClassName="jetbrains.mps.smodel.ModelAccess" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.core.aspects.behaviour.SMethodTrimmedId" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFromStatementsRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodWithReturn" file="ExtractMethodWithReturn.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodMatch" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoringParameters" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.ModelAccess" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFromStatementsRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.FieldInitializationPlace" file="FieldInitializationPlace.java">
    <classNode dependClassName="java.lang.String" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.IExtractMethodRefactoringProcessor" file="IExtractMethodRefactoringProcessor.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="java.util.List" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.IStaticContainerProcessor" file="IStaticContainerProcessor.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="java.util.List" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineFieldAssignmentRefactoring" file="InlineFieldAssignmentRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineFieldRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineFieldRefactoring" file="InlineFieldRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineFieldReferenceRefactoring" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineFieldAssignmentRefactoring" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineFieldReferenceOperationRefactoring" file="InlineFieldReferenceOperationRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="java.lang.IllegalArgumentException" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineFieldRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineFieldReferenceRefactoring" file="InlineFieldReferenceRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="java.lang.IllegalArgumentException" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineFieldRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodModel" file="InlineMethodModel.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.MPSProgramBuilder" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SRepository" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.Program" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodCallAdapter" />
    <classNode dependClassName="jetbrains.mps.smodel.behaviour.BHReflection" />
    <classNode dependClassName="jetbrains.mps.smodel.ModelAccess" />
    <classNode dependClassName="jetbrains.mps.core.aspects.behaviour.SMethodTrimmedId" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.Instruction" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.RetInstruction" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.DataFlowManager" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.NopInstruction" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineMethodRefactoring" file="InlineMethodRefactoring.java">
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.MPSProgramBuilder" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.search.VisibilityUtil" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SRepository" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.scope.FilteringScope" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodCallAdapter" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ClassRefactoringUtils" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.DataFlowManager" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="java.lang.StringBuffer" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.WriteInstruction" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.Program" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.Instruction" />
    <classNode dependClassName="jetbrains.mps.scope.Scope" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.lang.Iterable" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableAssignmentRefactoring" file="InlineVariableAssignmentRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.AnalysisResult" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.MPSProgramBuilder" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SRepository" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.analyzers.ReachingReadsAnalyzer" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.Program" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.behaviour.BHReflection" />
    <classNode dependClassName="jetbrains.mps.core.aspects.behaviour.SMethodTrimmedId" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.Instruction" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.DataFlowManager" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.ReadInstruction" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" file="InlineVariableRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.AnalysisResult" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.WriteInstruction" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.MPSProgramBuilder" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableAssignmentRefactoring" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SRepository" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.analyzers.ReachingReadsAnalyzer" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.Program" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.Instruction" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableReferenceRefactoring" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.DataFlowManager" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.ReadInstruction" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableReferenceRefactoring" file="InlineVariableReferenceRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="java.lang.IllegalArgumentException" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.AnalysisResult" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.WriteInstruction" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.MPSProgramBuilder" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SRepository" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.Program" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.instructions.Instruction" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.framework.analyzers.ReachingDefinitionsAnalyzer" />
    <classNode dependClassName="jetbrains.mps.lang.dataFlow.DataFlowManager" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Set" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.InlineVariableRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceConstantRefactoring" file="IntroduceConstantRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.scope.Scope" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MemberInsertingUtils" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceVariableRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceFieldRefactoring" file="IntroduceFieldRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.behaviour.BHReflection" />
    <classNode dependClassName="jetbrains.mps.core.aspects.behaviour.SMethodTrimmedId" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.FieldInitializationPlace" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MemberInsertingUtils" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.AbstractIntroduceFieldRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceLocalVariableRefactoring" file="IntroduceLocalVariableRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.behaviour.BHReflection" />
    <classNode dependClassName="jetbrains.mps.core.aspects.behaviour.SMethodTrimmedId" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.lang.Math" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceVariableRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceStaticFieldRefactoring" file="IntroduceStaticFieldRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.behaviour.BHReflection" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.core.aspects.behaviour.SMethodTrimmedId" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.FieldInitializationPlace" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MemberInsertingUtils" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.AbstractIntroduceFieldRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceVariableRefactoring" file="IntroduceVariableRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.util.NameUtil" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.HUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.SimpleDuplicatesFinder" />
    <classNode dependClassName="jetbrains.mps.smodel.behaviour.BHReflection" />
    <classNode dependClassName="jetbrains.mps.core.aspects.behaviour.SMethodTrimmedId" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.smodel.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.VisibilityLevel" />
    <classNode dependClassName="javax.swing.JComponent" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.MemberInsertingUtils" file="MemberInsertingUtils.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodCallAdapter" file="MethodCallAdapter.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="java.lang.IllegalArgumentException" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="org.jetbrains.annotations.NotNull" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodDuplicatesFinder" file="MethodDuplicatesFinder.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodMatch" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.util.MatchingUtil" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.util.IMatchModifier" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodMatch" file="MethodMatch.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.util.MatchingUtil" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodRefactoring" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.ExtractMethodFactory" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodModel" file="MethodModel.java">
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="java.lang.StringBuffer" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.lang.Runnable" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="jetbrains.mps.smodel.ModelAccess" />
    <classNode dependClassName="javax.swing.event.ChangeListener" />
    <classNode dependClassName="javax.swing.event.ChangeEvent" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodOptimizer" file="MethodOptimizer.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodParameter" file="MethodParameter.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.util.StructuralNodeSet" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.SubtypingManager" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeChecker" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodParameterModel" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodParameterModel" file="MethodParameterModel.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodRefactoringUtil" file="MethodRefactoringUtil.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.MethodRefactoringUtils" file="MethodRefactoringUtils.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.ide.findusages.model.SearchResult" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.ide.findusages.view.FindUtils" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.project.GlobalScope" />
    <classNode dependClassName="org.jetbrains.mps.openapi.util.ProgressMonitor" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.IOperationContext" />
    <classNode dependClassName="jetbrains.mps.ide.findusages.model.SearchResults" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.MoveRefactoringUtils" file="MoveRefactoringUtils.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelInternal" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SContainmentLink" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SModuleReference" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SModule" />
    <classNode dependClassName="org.jetbrains.mps.openapi.module.SDependency" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SReference" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.CollectionSequence" />
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SModelReference" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SModel" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.MemberInsertingUtils" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.module.ReloadableModuleBase" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.MoveStaticFieldRefactoring" file="MoveStaticFieldRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.BasicMoveRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.MoveStaticMethodRefactoring" file="MoveStaticMethodRefactoring.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeAccessUtil" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.persistence.PersistenceFacade" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode extendsClassName="jetbrains.mps.baseLanguage.util.plugin.refactorings.BasicMoveRefactoring" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.SimpleDuplicatesFinder" file="SimpleDuplicatesFinder.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="org.jetbrains.mps.openapi.language.SAbstractConcept" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.lang.pattern.util.MatchingUtil" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.ToStringWrap" file="ToStringWrap.java">
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="java.lang.String" />
  </dependency>
  <dependency className="jetbrains.mps.baseLanguage.util.plugin.refactorings.VisibilityLevel" file="VisibilityLevel.java">
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
  </dependency>
</dependenciesRoot>

