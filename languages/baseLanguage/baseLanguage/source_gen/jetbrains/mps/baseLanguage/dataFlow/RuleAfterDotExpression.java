package jetbrains.mps.baseLanguage.dataFlow;

/*Generated by MPS */

import jetbrains.mps.lang.dataFlow.framework.DataFlowConstructor;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.dataFlow.framework.Program;
import jetbrains.mps.baseLanguage.behavior.IOperation__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.baseLanguage.behavior.DotExpression__BehaviorDescriptor;
import jetbrains.mps.lang.dataFlow.framework.instructions.Instruction;

public class RuleAfterDotExpression implements DataFlowConstructor {
  public boolean isApplicable(SNode node) {
    SAbstractConcept concept = SNodeOperations.getConcept(node);
    SAbstractConcept applicableConcept = getApplicableConcept();
    return concept.equals(applicableConcept) || concept.isSubConceptOf(applicableConcept);
  }
  public SAbstractConcept getApplicableConcept() {
    return MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, "jetbrains.mps.baseLanguage.structure.DotExpression");
  }
  public void performActions(Program o, SNode node) {
    if (!((boolean) IOperation__BehaviorDescriptor.operandCanBeNull_idhWYZ0eEN6z.invoke(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, 0x116b46b36c4L, "operation")))) && !((boolean) DotExpression__BehaviorDescriptor.allowsNullOperand_id3Yy2P0QQESt.invoke(node))) {
      {
        Object object = SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, 0x116b46a4416L, "operand"));
        if (((Program) o).contains(object)) {
          boolean before = false;
          int position = ((Program) (o)).getEnd(object);
          Instruction instruction = new notNullInstruction(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L, 0x116b46a4416L, "operand")));
          instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/6868777471677432385");
          instruction.setSource(node);
          ((Program) (o)).insert(instruction, position, true, before);
        }
      }
    }
    if ((boolean) DotExpression__BehaviorDescriptor.allowsNullOperand_id3Yy2P0QQESt.invoke(node)) {
      {
        Object object = node;
        if (((Program) o).contains(object)) {
          boolean before = false;
          int position = ((Program) (o)).getEnd(object);
          Instruction instruction = new nullableInstruction(node);
          instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/9161080218840690644");
          instruction.setSource(node);
          ((Program) (o)).insert(instruction, position, true, before);
        }
      }
    }
  }
}
